{
  "nested": {
    "taygo": {
      "nested": {
        "contact": {
          "nested": {
            "Contact": {
              "options": {
                "(taygo.db.model).gen": true
              },
              "fields": {
                "id": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "(taygo.db.attr).id": true,
                    "(taygo.db.attr).default.cuid": true
                  }
                },
                "email": {
                  "type": "string",
                  "id": 2,
                  "options": {
                    "(taygo.db.attr).unique": true,
                    "(validate.rules).string.email": true
                  }
                },
                "name": {
                  "type": "string",
                  "id": 3
                },
                "message": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        },
        "db": {
          "nested": {
            "Attributes": {
              "fields": {
                "optional": {
                  "type": "bool",
                  "id": 1
                },
                "unique": {
                  "type": "bool",
                  "id": 2
                },
                "id": {
                  "type": "bool",
                  "id": 3
                },
                "updatedAt": {
                  "type": "bool",
                  "id": 4
                },
                "default": {
                  "type": "AttributesDefault",
                  "id": 5
                },
                "relation": {
                  "type": "AttributesRelation",
                  "id": 6
                }
              }
            },
            "AttributesDefault": {
              "fields": {
                "value": {
                  "type": "google.protobuf.Any",
                  "id": 5
                },
                "autoincrement": {
                  "type": "bool",
                  "id": 6
                },
                "dbgenerated": {
                  "type": "bool",
                  "id": 7
                },
                "cuid": {
                  "type": "bool",
                  "id": 8
                },
                "uuid": {
                  "type": "bool",
                  "id": 9
                },
                "now": {
                  "type": "bool",
                  "id": 10
                }
              }
            },
            "AttributesRelation": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "fields": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "references": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                }
              }
            },
            "Model": {
              "fields": {
                "gen": {
                  "type": "bool",
                  "id": 1
                },
                "name": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "model": {
              "type": "Model",
              "id": 1111110,
              "extend": "google.protobuf.MessageOptions"
            },
            "attr": {
              "type": "Attributes",
              "id": 1111310,
              "extend": "google.protobuf.FieldOptions"
            }
          }
        }
      }
    },
    "validate": {
      "options": {
        "go_package": "github.com/envoyproxy/protoc-gen-validate/validate",
        "java_package": "io.envoyproxy.pgv.validate"
      },
      "nested": {
        "disabled": {
          "type": "bool",
          "id": 1071,
          "extend": "google.protobuf.MessageOptions"
        },
        "ignored": {
          "type": "bool",
          "id": 1072,
          "extend": "google.protobuf.MessageOptions"
        },
        "required": {
          "type": "bool",
          "id": 1071,
          "extend": "google.protobuf.OneofOptions"
        },
        "rules": {
          "type": "FieldRules",
          "id": 1071,
          "extend": "google.protobuf.FieldOptions"
        },
        "FieldRules": {
          "oneofs": {
            "type": {
              "oneof": [
                "float",
                "double",
                "int32",
                "int64",
                "uint32",
                "uint64",
                "sint32",
                "sint64",
                "fixed32",
                "fixed64",
                "sfixed32",
                "sfixed64",
                "bool",
                "string",
                "bytes",
                "enum",
                "repeated",
                "map",
                "any",
                "duration",
                "timestamp"
              ]
            }
          },
          "fields": {
            "message": {
              "type": "MessageRules",
              "id": 17
            },
            "float": {
              "type": "FloatRules",
              "id": 1
            },
            "double": {
              "type": "DoubleRules",
              "id": 2
            },
            "int32": {
              "type": "Int32Rules",
              "id": 3
            },
            "int64": {
              "type": "Int64Rules",
              "id": 4
            },
            "uint32": {
              "type": "UInt32Rules",
              "id": 5
            },
            "uint64": {
              "type": "UInt64Rules",
              "id": 6
            },
            "sint32": {
              "type": "SInt32Rules",
              "id": 7
            },
            "sint64": {
              "type": "SInt64Rules",
              "id": 8
            },
            "fixed32": {
              "type": "Fixed32Rules",
              "id": 9
            },
            "fixed64": {
              "type": "Fixed64Rules",
              "id": 10
            },
            "sfixed32": {
              "type": "SFixed32Rules",
              "id": 11
            },
            "sfixed64": {
              "type": "SFixed64Rules",
              "id": 12
            },
            "bool": {
              "type": "BoolRules",
              "id": 13
            },
            "string": {
              "type": "StringRules",
              "id": 14
            },
            "bytes": {
              "type": "BytesRules",
              "id": 15
            },
            "enum": {
              "type": "EnumRules",
              "id": 16
            },
            "repeated": {
              "type": "RepeatedRules",
              "id": 18
            },
            "map": {
              "type": "MapRules",
              "id": 19
            },
            "any": {
              "type": "AnyRules",
              "id": 20
            },
            "duration": {
              "type": "DurationRules",
              "id": 21
            },
            "timestamp": {
              "type": "TimestampRules",
              "id": 22
            }
          }
        },
        "FloatRules": {
          "fields": {
            "const": {
              "type": "float",
              "id": 1
            },
            "lt": {
              "type": "float",
              "id": 2
            },
            "lte": {
              "type": "float",
              "id": 3
            },
            "gt": {
              "type": "float",
              "id": 4
            },
            "gte": {
              "type": "float",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "float",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "float",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "DoubleRules": {
          "fields": {
            "const": {
              "type": "double",
              "id": 1
            },
            "lt": {
              "type": "double",
              "id": 2
            },
            "lte": {
              "type": "double",
              "id": 3
            },
            "gt": {
              "type": "double",
              "id": 4
            },
            "gte": {
              "type": "double",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "double",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "double",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "Int32Rules": {
          "fields": {
            "const": {
              "type": "int32",
              "id": 1
            },
            "lt": {
              "type": "int32",
              "id": 2
            },
            "lte": {
              "type": "int32",
              "id": 3
            },
            "gt": {
              "type": "int32",
              "id": 4
            },
            "gte": {
              "type": "int32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "int32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "int32",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "Int64Rules": {
          "fields": {
            "const": {
              "type": "int64",
              "id": 1
            },
            "lt": {
              "type": "int64",
              "id": 2
            },
            "lte": {
              "type": "int64",
              "id": 3
            },
            "gt": {
              "type": "int64",
              "id": 4
            },
            "gte": {
              "type": "int64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "int64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "int64",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "UInt32Rules": {
          "fields": {
            "const": {
              "type": "uint32",
              "id": 1
            },
            "lt": {
              "type": "uint32",
              "id": 2
            },
            "lte": {
              "type": "uint32",
              "id": 3
            },
            "gt": {
              "type": "uint32",
              "id": 4
            },
            "gte": {
              "type": "uint32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "uint32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "uint32",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "UInt64Rules": {
          "fields": {
            "const": {
              "type": "uint64",
              "id": 1
            },
            "lt": {
              "type": "uint64",
              "id": 2
            },
            "lte": {
              "type": "uint64",
              "id": 3
            },
            "gt": {
              "type": "uint64",
              "id": 4
            },
            "gte": {
              "type": "uint64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "uint64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "uint64",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "SInt32Rules": {
          "fields": {
            "const": {
              "type": "sint32",
              "id": 1
            },
            "lt": {
              "type": "sint32",
              "id": 2
            },
            "lte": {
              "type": "sint32",
              "id": 3
            },
            "gt": {
              "type": "sint32",
              "id": 4
            },
            "gte": {
              "type": "sint32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sint32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "sint32",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "SInt64Rules": {
          "fields": {
            "const": {
              "type": "sint64",
              "id": 1
            },
            "lt": {
              "type": "sint64",
              "id": 2
            },
            "lte": {
              "type": "sint64",
              "id": 3
            },
            "gt": {
              "type": "sint64",
              "id": 4
            },
            "gte": {
              "type": "sint64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sint64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "sint64",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "Fixed32Rules": {
          "fields": {
            "const": {
              "type": "fixed32",
              "id": 1
            },
            "lt": {
              "type": "fixed32",
              "id": 2
            },
            "lte": {
              "type": "fixed32",
              "id": 3
            },
            "gt": {
              "type": "fixed32",
              "id": 4
            },
            "gte": {
              "type": "fixed32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "fixed32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "fixed32",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "Fixed64Rules": {
          "fields": {
            "const": {
              "type": "fixed64",
              "id": 1
            },
            "lt": {
              "type": "fixed64",
              "id": 2
            },
            "lte": {
              "type": "fixed64",
              "id": 3
            },
            "gt": {
              "type": "fixed64",
              "id": 4
            },
            "gte": {
              "type": "fixed64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "fixed64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "fixed64",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "SFixed32Rules": {
          "fields": {
            "const": {
              "type": "sfixed32",
              "id": 1
            },
            "lt": {
              "type": "sfixed32",
              "id": 2
            },
            "lte": {
              "type": "sfixed32",
              "id": 3
            },
            "gt": {
              "type": "sfixed32",
              "id": 4
            },
            "gte": {
              "type": "sfixed32",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sfixed32",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "sfixed32",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "SFixed64Rules": {
          "fields": {
            "const": {
              "type": "sfixed64",
              "id": 1
            },
            "lt": {
              "type": "sfixed64",
              "id": 2
            },
            "lte": {
              "type": "sfixed64",
              "id": 3
            },
            "gt": {
              "type": "sfixed64",
              "id": 4
            },
            "gte": {
              "type": "sfixed64",
              "id": 5
            },
            "in": {
              "rule": "repeated",
              "type": "sfixed64",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "sfixed64",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 8
            }
          }
        },
        "BoolRules": {
          "fields": {
            "const": {
              "type": "bool",
              "id": 1
            }
          }
        },
        "StringRules": {
          "oneofs": {
            "wellKnown": {
              "oneof": [
                "email",
                "hostname",
                "ip",
                "ipv4",
                "ipv6",
                "uri",
                "uriRef",
                "address",
                "uuid",
                "wellKnownRegex"
              ]
            }
          },
          "fields": {
            "const": {
              "type": "string",
              "id": 1
            },
            "len": {
              "type": "uint64",
              "id": 19
            },
            "minLen": {
              "type": "uint64",
              "id": 2
            },
            "maxLen": {
              "type": "uint64",
              "id": 3
            },
            "lenBytes": {
              "type": "uint64",
              "id": 20
            },
            "minBytes": {
              "type": "uint64",
              "id": 4
            },
            "maxBytes": {
              "type": "uint64",
              "id": 5
            },
            "pattern": {
              "type": "string",
              "id": 6
            },
            "prefix": {
              "type": "string",
              "id": 7
            },
            "suffix": {
              "type": "string",
              "id": 8
            },
            "contains": {
              "type": "string",
              "id": 9
            },
            "notContains": {
              "type": "string",
              "id": 23
            },
            "in": {
              "rule": "repeated",
              "type": "string",
              "id": 10
            },
            "notIn": {
              "rule": "repeated",
              "type": "string",
              "id": 11
            },
            "email": {
              "type": "bool",
              "id": 12
            },
            "hostname": {
              "type": "bool",
              "id": 13
            },
            "ip": {
              "type": "bool",
              "id": 14
            },
            "ipv4": {
              "type": "bool",
              "id": 15
            },
            "ipv6": {
              "type": "bool",
              "id": 16
            },
            "uri": {
              "type": "bool",
              "id": 17
            },
            "uriRef": {
              "type": "bool",
              "id": 18
            },
            "address": {
              "type": "bool",
              "id": 21
            },
            "uuid": {
              "type": "bool",
              "id": 22
            },
            "wellKnownRegex": {
              "type": "KnownRegex",
              "id": 24
            },
            "strict": {
              "type": "bool",
              "id": 25,
              "options": {
                "default": true
              }
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 26
            }
          }
        },
        "KnownRegex": {
          "values": {
            "UNKNOWN": 0,
            "HTTP_HEADER_NAME": 1,
            "HTTP_HEADER_VALUE": 2
          }
        },
        "BytesRules": {
          "oneofs": {
            "wellKnown": {
              "oneof": ["ip", "ipv4", "ipv6"]
            }
          },
          "fields": {
            "const": {
              "type": "bytes",
              "id": 1
            },
            "len": {
              "type": "uint64",
              "id": 13
            },
            "minLen": {
              "type": "uint64",
              "id": 2
            },
            "maxLen": {
              "type": "uint64",
              "id": 3
            },
            "pattern": {
              "type": "string",
              "id": 4
            },
            "prefix": {
              "type": "bytes",
              "id": 5
            },
            "suffix": {
              "type": "bytes",
              "id": 6
            },
            "contains": {
              "type": "bytes",
              "id": 7
            },
            "in": {
              "rule": "repeated",
              "type": "bytes",
              "id": 8
            },
            "notIn": {
              "rule": "repeated",
              "type": "bytes",
              "id": 9
            },
            "ip": {
              "type": "bool",
              "id": 10
            },
            "ipv4": {
              "type": "bool",
              "id": 11
            },
            "ipv6": {
              "type": "bool",
              "id": 12
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 14
            }
          }
        },
        "EnumRules": {
          "fields": {
            "const": {
              "type": "int32",
              "id": 1
            },
            "definedOnly": {
              "type": "bool",
              "id": 2
            },
            "in": {
              "rule": "repeated",
              "type": "int32",
              "id": 3,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "int32",
              "id": 4,
              "options": {
                "packed": false
              }
            }
          }
        },
        "MessageRules": {
          "fields": {
            "skip": {
              "type": "bool",
              "id": 1
            },
            "required": {
              "type": "bool",
              "id": 2
            }
          }
        },
        "RepeatedRules": {
          "fields": {
            "minItems": {
              "type": "uint64",
              "id": 1
            },
            "maxItems": {
              "type": "uint64",
              "id": 2
            },
            "unique": {
              "type": "bool",
              "id": 3
            },
            "items": {
              "type": "FieldRules",
              "id": 4
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 5
            }
          }
        },
        "MapRules": {
          "fields": {
            "minPairs": {
              "type": "uint64",
              "id": 1
            },
            "maxPairs": {
              "type": "uint64",
              "id": 2
            },
            "noSparse": {
              "type": "bool",
              "id": 3
            },
            "keys": {
              "type": "FieldRules",
              "id": 4
            },
            "values": {
              "type": "FieldRules",
              "id": 5
            },
            "ignoreEmpty": {
              "type": "bool",
              "id": 6
            }
          }
        },
        "AnyRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "in": {
              "rule": "repeated",
              "type": "string",
              "id": 2
            },
            "notIn": {
              "rule": "repeated",
              "type": "string",
              "id": 3
            }
          }
        },
        "DurationRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "const": {
              "type": "google.protobuf.Duration",
              "id": 2
            },
            "lt": {
              "type": "google.protobuf.Duration",
              "id": 3
            },
            "lte": {
              "type": "google.protobuf.Duration",
              "id": 4
            },
            "gt": {
              "type": "google.protobuf.Duration",
              "id": 5
            },
            "gte": {
              "type": "google.protobuf.Duration",
              "id": 6
            },
            "in": {
              "rule": "repeated",
              "type": "google.protobuf.Duration",
              "id": 7,
              "options": {
                "packed": false
              }
            },
            "notIn": {
              "rule": "repeated",
              "type": "google.protobuf.Duration",
              "id": 8,
              "options": {
                "packed": false
              }
            }
          }
        },
        "TimestampRules": {
          "fields": {
            "required": {
              "type": "bool",
              "id": 1
            },
            "const": {
              "type": "google.protobuf.Timestamp",
              "id": 2
            },
            "lt": {
              "type": "google.protobuf.Timestamp",
              "id": 3
            },
            "lte": {
              "type": "google.protobuf.Timestamp",
              "id": 4
            },
            "gt": {
              "type": "google.protobuf.Timestamp",
              "id": 5
            },
            "gte": {
              "type": "google.protobuf.Timestamp",
              "id": 6
            },
            "ltNow": {
              "type": "bool",
              "id": 7
            },
            "gtNow": {
              "type": "bool",
              "id": 8
            },
            "within": {
              "type": "google.protobuf.Duration",
              "id": 9
            }
          }
        }
      }
    },
    "google": {
      "nested": {
        "protobuf": {
          "nested": {
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}
