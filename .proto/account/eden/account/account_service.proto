syntax = "proto3";

package eden.account;

import "eden/api/service.proto";
import "eden/account/account.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// --=[Service]=---------------------------------------------------------------

service AccountService {
  option (eden.api.service) = {
    name: "eden.srv.account"
    endpoint: "eden.growthat.agency"
  };

  // Create takes a request `CreateAccountRequest` and returns a response
  // `Account`
  rpc Create ( CreateAccountRequest ) returns ( Account ) {
    option (google.api.http) = {
      post: "/v1/accounts"
      body: "account"
    };
  };

  // Get takes a request `GetAccountRequest` and returns a response
  // `Account`
  rpc Get ( GetAccountRequest ) returns ( Account ) {
    option (google.api.http) = {
      get: "/v1/accounts/{account.id}"
    };
  };

  // Get takes a request `UpdateAccountRequest` and returns a response
  // `Account`
  rpc Update ( UpdateAccountRequest ) returns ( Account ) {
    option (google.api.http) = {
      put: "/v1/accounts"
      body: "account"
    };
  };

  // Delete takes a request `DeleteAccountRequest` and returns a response
  // `google.protobuf.Empty`
  rpc Delete ( DeleteAccountRequest ) returns ( Account ) {
    option (google.api.http) = {
      delete: "/v1/accounts/{account.id}"
    };
  };
}

// --=[Requests]=--------------------------------------------------------------

message CreateAccountRequest {
  // The `Account` entity to create.
  Account account = 1;
}

message GetAccountRequest {
  // The `Account` entity to fetch.
  Account account = 1;
}

message UpdateAccountRequest {
  // The `Account` entity to update.
  Account account = 1;
}

message DeleteAccountRequest {
  // The `Account` entity to delete.
  Account account = 1;
}

// --=[Events]=----------------------------------------------------------------

enum AccountEvent {
  EVENT_UNSPECIFIED = 0;
  EVENT_CREATE_ACCOUNT = 1;
  EVENT_UPDATE_ACCOUNT = 2;
  EVENT_DELETE_ACCOUNT = 3;
}
